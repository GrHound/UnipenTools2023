#
# Makefile header for [Linux]
# Automatically created by 'configure 3'
# Creation date: Wed Nov 28 12:13:07 CET 2001
#
# This file is included by all Makefiles below
#
# This is the template Makefile, which you should edit to compile it on your system, if
# the normal 'configure; make; make install' procedure fails.........
# If it fails, this is because header files or libraries cannot be found
# The uptools package uses X11 and Tcl/Tk, and some make variables may have to be changed
# in order to let it work........
#

VERSION       = 6
MINOR_VERSION = 66

UL_VERSION  = '"$(VERSION).$(MINOR_VERSION) Nov. 2004  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'
UR_VERSION  = '"$(VERSION).$(MINOR_VERSION) Nov. 2004  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'
UV_VERSION  = '"$(VERSION).$(MINOR_VERSION) Nov. 2004  - L.Schomaker, L.Vuurpijl, G.Abbink  - NICI"'

# author = Louis Vuurpijl, vuurpijl@nici.kun.nl

#
# You may have (or want) to edit the lines below, to indicate where to find
# and place stuff. Typically, you would say that UPTOOLS is `pwd`.
# After making all executables, they are placed in $UL_BIN, libraries wil be
# in $UL_LIB. If you want to install the binaries and libraries to some
# general place, like /usr/local/bin and /usr/local/lib, change the variables
# UP_INSTALL_BIN, UP_INSTALL_LIB, UP_INSTALL_TCL and UP_INSTALL_UL_LIB
# below.
#

# edit the next line to indicate the root directory of the distribution
# to make it locally, use UPTOOLS is USE_PWD
UPTOOLS = .

MY_TCL_DIR =  /usr
MY_TCL_LIB = -L$(MY_TCL_DIR)/lib

EXPECTED_TK_VERSION  = '"8.0"'
EXPECTED_TCL_VERSION = '"8.0"'

# if you don't, set MY_TCL_DIR to DEFAULT like:
#MY_TCL_DIR = DEFAULT

# if you do, you probably want to run upworks and you'll need
# your personalized UPWORKS_RESOURCE_FILE
UPWORKS_RESOURCE_FILE = $(HOME)/.upworksrc
# and also, you'll need a file containing fonts,
# e.g. generated by 'xlsfonts'
UPWORKS_FONTS = $(HOME)/.upworks_fonts

# the next lines are to indicate where to place stuff for installation
# UP_INSTALL_BIN    will contain the following extra executables:
#                   upview, upread, unipen2eps, uni2animgif
# UP_INSTALL_LIB    will contain the following extra libraries:
#                   libink3 libupworks3 libuplib3
# UP_INSTALL_TCL    will contain upworks
# UP_INSTALL_UL_LIB will contain tcl-libraries in 'library', and
#                   it will contain 'unipen.def' and 'UPTOOLS_SETTINGS'

# an example:
# ROOT                 = /usr/local
# UP_INSTALL_LIB       = $(ROOT)/lib
# UP_INSTALL_BIN       = $(ROOT)/bin
# UP_INSTALL_TCL       = $(ROOT)/bin
# UP_INSTALL_UL_LIB    = $(ROOT)/lib/uptools$(VERSION)

# our situation at nici: (variables come from my environment)

UP_INSTALL_BIN       = ./bin
UP_INSTALL_LIB       = ./lib
UP_INSTALL_TCL       = ./tcl
#UP_INSTALL_UL_LIB    = $(UP_INSTALL_LIB)/uptools$(VERSION)

INSTALL_MAKE_FLAGS   = UL_LIB=$(UP_INSTALL_LIB) UL_BIN=$(UP_INSTALL_BIN) SL_TARGET=$(UP_INSTALL_LIB)/libuplib$(VERSION)$(SLSUFFIX) L_TARGET=$(UP_INSTALL_LIB)/libuplib$(VERSION)$(LSUFFIX)


UL_LIB  = $(UPTOOLS)/lib
UL_BIN  = $(UPTOOLS)/bin
UL_DIR  = $(UPTOOLS)/Uplib

LINK_UPLIB = $(UL_LIB)/libuplib$(VERSION).a
LIB_UPLIB  = $(LINK_UPLIB)


# edits are not so likely below this, maybe except for X11 header files
# if your compiler complaints about not finding X11/*.h files,
# check one of the output lines of 'make configure';
# it should say were to find them

# on most systems:
# X11_INCLUDE = /usr/local/X11R6/include
# X11_LIB     = /usr/local/X11R6/lib

# on my solaris system:
# X11_INCLUDE = /usr/openwin/include
# X11_LIB     = /usr/openwin/lib
# on my linux system
#X11_INCLUDE   = /usr/X11R6/include
#X11_LIB       = /usr/X11R6/lib

# on my ubuntu system
X11_INCLUDE=/usr/include/X11
X11_LIB=/usr/lib/i386-linux-gnu

MAY_USE_RANLIB = echo

# edits are very unlikely below this

LINK_X11 = -L$(X11_LIB)






CC       = gcc
CFLAGS   = -O4 -I. -I$(X11_INCLUDE) -Wall -pedantic -I$(UL_DIR)
SLFLAGS  = -O4 -I. -I$(X11_INCLUDE) -fPIC -Wall -pedantic
SL_LD    = gcc -shared -W -o
SLSUFFIX = .so
LINK_LIBS     = -L/usr/X11R6/lib -lX11
L_LD     = ar ruv
LSUFFIX  = .a
MAY_USE_RANLIB = ranlib

SL_TARGET    = $(UL_LIB)/libuplib$(VERSION)$(SLSUFFIX)
L_TARGET     = $(UL_LIB)/libuplib$(VERSION)$(LSUFFIX)


all: $(SL_TARGET) $(L_TARGET)

#all: $(L_TARGET)

UPLIBL = uplib.o\
	upsiglib.o\
	uphierarchy.o\
	up_segment_io.o

UPLIBSL = sluplib.o\
	slupsiglib.o\
	sluphierarchy.o\
	slup_segment_io.o

$(L_TARGET): $(UPLIBL)
	@(umask 007)
	$(L_LD) $@ $(UPLIBL)
	$(MAY_USE_RANLIB) $@
$(SL_TARGET): $(UPLIBSL)
	@(umask 007)
	$(SL_LD) $@ $(UPLIBSL)

sluplib.o: uplib.c uplib.h
	@(umask 007)
	$(CC) -c $(SLFLAGS) -DUPLIB_VERSION=$(UL_VERSION) uplib.c -o $@
slupsiglib.o: upsiglib.c upsiglib.h
	@(umask 007)
	$(CC) -c $(SLFLAGS) upsiglib.c -o $@
sluphierarchy.o: uphierarchy.c uphierarchy.h
	@(umask 007)
	$(CC) -c $(SLFLAGS) uphierarchy.c -o $@
slup_segment_io.o: up_segment_io.c up_segment_io.h
	@(umask 007)
	$(CC) -c $(SLFLAGS) up_segment_io.c -o $@

uplib.o: uplib.c uplib.h
	@(umask 007)
	$(CC) -c $(CFLAGS) -DUPLIB_VERSION=$(UL_VERSION) uplib.c -o $@
upsiglib.o: upsiglib.c upsiglib.h
	@(umask 007)
	$(CC) -c $(CFLAGS) upsiglib.c -o $@
uphierarchy.o: uphierarchy.c uphierarchy.h
	@(umask 007)
	$(CC) -c $(CFLAGS) uphierarchy.c -o $@
up_segment_io.o: up_segment_io.c up_segment_io.h
	@(umask 007)
	$(CC) -c $(CFLAGS) up_segment_io.c -o $@

###################     clean     ###################

clean:
	\rm -f $(TARGET) *.o
